HloModule test_algebraic_simplifier_5
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_one = f32[] constant(1)
  constant_zero = f32[] constant(0)
  zero_array = f32[3,5] broadcast(constant_zero), dimensions={}
  one_array = f32[3,5] broadcast(constant_one), dimensions={}
  two_array = f32[3,5] broadcast(constant_two), dimensions={}
  neg_one_array = f32[3,5] broadcast(constant_neg_one), dimensions={}
  e_array = f32[3,5] broadcast(constant_e), dimensions={}
  sub_zero_5_0 = f32[3,5] subtract(two_array, zero_array)
  sub_self_5_1 = f32[3,5] subtract(e_array, e_array)
  mul_one_5_2 = f32[3,5] multiply(e_array, one_array)
  mul_zero_5_3 = f32[3,5] multiply(one_array, zero_array)
  add_neg_5_4 = f32[3,5] add(one_array, neg_one_array)
  square_sqrt_5_5 = f32[3,5] power(sqrt(neg_one_array), two_array)
  double_neg_5_6 = f32[3,5] multiply(one_array, multiply(neg_one_array, neg_one_array))
  complex_combo_5_combo_0 = f32[3,5] subtract(sub_zero_5_0, add_neg_5_4)
  complex_combo_5_combo_1 = f32[3,5] subtract(double_neg_5_6, double_neg_5_6)
  complex_combo_5_combo_2 = f32[3,5] add(mul_one_5_2, square_sqrt_5_5)
  ROOT result = (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) tuple(
    sub_zero_5_0,
    sub_self_5_1,
    mul_one_5_2,
    mul_zero_5_3,
    add_neg_5_4,
    square_sqrt_5_5,
    double_neg_5_6,
    complex_combo_5_combo_0,
    complex_combo_5_combo_1,
    complex_combo_5_combo_2
  )
}