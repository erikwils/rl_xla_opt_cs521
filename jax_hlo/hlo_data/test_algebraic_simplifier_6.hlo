HloModule test_algebraic_simplifier_6, entry_computation_layout={()->(f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, /*index=5*/f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0})}

ENTRY %main () -> (f32[4,4], f32[4,4], f32[4,4], f32[4,4], f32[4,4], /*index=5*/f32[4,4], f32[4,4], f32[4,4]) {
  %constant_two = f32[] constant(2)
  %two_array = f32[4,4]{1,0} broadcast(%constant_two), dimensions={}
  %constant_zero = f32[] constant(0)
  %zero_array = f32[4,4]{1,0} broadcast(%constant_zero), dimensions={}
  %add.anon = f32[4,4]{1,0} add(%two_array, %zero_array)
  %constant_one = f32[] constant(1)
  %one_array = f32[4,4]{1,0} broadcast(%constant_one), dimensions={}
  %complex_mul_add_6_0 = f32[4,4]{1,0} multiply(%add.anon, %one_array)
  %constant_pi = f32[] constant(3.14159)
  %pi_array = f32[4,4]{1,0} broadcast(%constant_pi), dimensions={}
  %add.anon.1 = f32[4,4]{1,0} add(%pi_array, %two_array)
  %complex_sub_add_6_1 = f32[4,4]{1,0} subtract(%add.anon.1, %two_array)
  %multiply.anon = f32[4,4]{1,0} multiply(%two_array, %one_array)
  %complex_add_mul_6_2 = f32[4,4]{1,0} add(%multiply.anon, %zero_array)
  %sqrt.anon = f32[4,4]{1,0} sqrt(%one_array)
  %square_sqrt_6_3 = f32[4,4]{1,0} power(%sqrt.anon, %two_array)
  %multiply.anon.1 = f32[4,4]{1,0} multiply(%one_array, %one_array)
  %complex_pow_mul_6_4 = f32[4,4]{1,0} power(%multiply.anon.1, %one_array)
  %mul_two_6_5 = f32[4,4]{1,0} multiply(%two_array, %two_array)
  %add_zero_6_6 = f32[4,4]{1,0} add(%zero_array, %zero_array)
  %sub_zero_6_7 = f32[4,4]{1,0} subtract(%zero_array, %zero_array)
  ROOT %result = (f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, /*index=5*/f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}) tuple(%complex_mul_add_6_0, %complex_sub_add_6_1, %complex_add_mul_6_2, %square_sqrt_6_3, %complex_pow_mul_6_4, /*index=5*/%mul_two_6_5, %add_zero_6_6, %sub_zero_6_7)
}



