HloModule test_algebraic_simplifier_17, entry_computation_layout={()->(f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, /*index=5*/f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0})}

ENTRY %main () -> (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], /*index=5*/f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) {
  %constant_one = f32[] constant(1)
  %one_array = f32[3,5]{1,0} broadcast(%constant_one), dimensions={}
  %constant_zero = f32[] constant(0)
  %zero_array = f32[3,5]{1,0} broadcast(%constant_zero), dimensions={}
  %mul_zero_17_0 = f32[3,5]{1,0} multiply(%one_array, %zero_array)
  %constant_pi = f32[] constant(3.14159)
  %pi_array = f32[3,5]{1,0} broadcast(%constant_pi), dimensions={}
  %sub_self_17_1 = f32[3,5]{1,0} subtract(%pi_array, %pi_array)
  %add_zero_17_2 = f32[3,5]{1,0} add(%one_array, %zero_array)
  %mul_one_17_3 = f32[3,5]{1,0} multiply(%pi_array, %one_array)
  %sub_zero_17_4 = f32[3,5]{1,0} subtract(%zero_array, %zero_array)
  %constant_two = f32[] constant(2)
  %two_array = f32[3,5]{1,0} broadcast(%constant_two), dimensions={}
  %multiply.anon = f32[3,5]{1,0} multiply(%two_array, %one_array)
  %complex_pow_mul_17_5 = f32[3,5]{1,0} power(%multiply.anon, %one_array)
  %add.anon = f32[3,5]{1,0} add(%pi_array, %one_array)
  %complex_sub_add_17_6 = f32[3,5]{1,0} subtract(%add.anon, %one_array)
  %div_one_17_7 = f32[3,5]{1,0} divide(%pi_array, %one_array)
  %complex_combo_17_combo_0 = f32[3,5]{1,0} multiply(%sub_self_17_1, %sub_zero_17_4)
  %complex_combo_17_combo_1 = f32[3,5]{1,0} multiply(%complex_pow_mul_17_5, %div_one_17_7)
  ROOT %result = (f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, /*index=5*/f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}, f32[3,5]{1,0}) tuple(%mul_zero_17_0, %sub_self_17_1, %add_zero_17_2, %mul_one_17_3, %sub_zero_17_4, /*index=5*/%complex_pow_mul_17_5, %complex_sub_add_17_6, %div_one_17_7, %complex_combo_17_combo_0, %complex_combo_17_combo_1)
}



