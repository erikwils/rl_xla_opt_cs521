HloModule test_algebraic_simplifier_23, entry_computation_layout={()->(f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, /*index=5*/f32[16]{0}, f32[16]{0})}

ENTRY %main () -> (f32[16], f32[16], f32[16], f32[16], f32[16], /*index=5*/f32[16], f32[16]) {
  %constant_pi = f32[] constant(3.14159)
  %pi_array = f32[16]{0} broadcast(%constant_pi), dimensions={}
  %constant_zero = f32[] constant(0)
  %zero_array = f32[16]{0} broadcast(%constant_zero), dimensions={}
  %add.anon = f32[16]{0} add(%pi_array, %zero_array)
  %constant_one = f32[] constant(1)
  %one_array = f32[16]{0} broadcast(%constant_one), dimensions={}
  %complex_mul_add_23_0 = f32[16]{0} multiply(%add.anon, %one_array)
  %sub_zero_23_1 = f32[16]{0} subtract(%pi_array, %zero_array)
  %mul_zero_23_2 = f32[16]{0} multiply(%pi_array, %zero_array)
  %multiply.anon = f32[16]{0} multiply(%one_array, %one_array)
  %complex_add_mul_23_3 = f32[16]{0} add(%multiply.anon, %zero_array)
  %sqrt.anon = f32[16]{0} sqrt(%zero_array)
  %constant_two = f32[] constant(2)
  %two_array = f32[16]{0} broadcast(%constant_two), dimensions={}
  %square_sqrt_23_4 = f32[16]{0} power(%sqrt.anon, %two_array)
  %add_zero_23_5 = f32[16]{0} add(%one_array, %zero_array)
  %mul_one_23_6 = f32[16]{0} multiply(%pi_array, %one_array)
  ROOT %result = (f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, /*index=5*/f32[16]{0}, f32[16]{0}) tuple(%complex_mul_add_23_0, %sub_zero_23_1, %mul_zero_23_2, %complex_add_mul_23_3, %square_sqrt_23_4, /*index=5*/%add_zero_23_5, %mul_one_23_6)
}



