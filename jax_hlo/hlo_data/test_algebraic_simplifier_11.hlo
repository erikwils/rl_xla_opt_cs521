HloModule test_algebraic_simplifier_11
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_pi = f32[] constant(3.14159)
  constant_half = f32[] constant(0.5)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_one = f32[] constant(1)
  constant_zero = f32[] constant(0)
  zero_array = f32[8,8] broadcast(constant_zero), dimensions={}
  one_array = f32[8,8] broadcast(constant_one), dimensions={}
  two_array = f32[8,8] broadcast(constant_two), dimensions={}
  neg_one_array = f32[8,8] broadcast(constant_neg_one), dimensions={}
  half_array = f32[8,8] broadcast(constant_half), dimensions={}
  pi_array = f32[8,8] broadcast(constant_pi), dimensions={}
  e_array = f32[8,8] broadcast(constant_e), dimensions={}
  complex_sub_add_11_0 = f32[8,8] subtract(add(neg_one_array, neg_one_array), neg_one_array)
  div_one_11_1 = f32[8,8] divide(one_array, one_array)
  complex_pow_mul_11_2 = f32[8,8] power(multiply(neg_one_array, one_array), one_array)
  mul_zero_11_3 = f32[8,8] multiply(neg_one_array, zero_array)
  sub_self_11_4 = f32[8,8] subtract(half_array, half_array)
  complex_mul_add_11_5 = f32[8,8] multiply(add(one_array, zero_array), one_array)
  square_sqrt_11_6 = f32[8,8] power(sqrt(half_array), two_array)
  mul_two_11_7 = f32[8,8] multiply(half_array, two_array)
  ROOT result = (f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8]) tuple(
    complex_sub_add_11_0,
    div_one_11_1,
    complex_pow_mul_11_2,
    mul_zero_11_3,
    sub_self_11_4,
    complex_mul_add_11_5,
    square_sqrt_11_6,
    mul_two_11_7
  )
}