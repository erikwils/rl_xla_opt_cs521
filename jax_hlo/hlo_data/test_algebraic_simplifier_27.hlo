HloModule test_algebraic_simplifier_27
ENTRY main {
  constant_pi = f32[] constant(3.14159)
  constant_half = f32[] constant(0.5)
  constant_two = f32[] constant(2)
  constant_one = f32[] constant(1)
  constant_zero = f32[] constant(0)
  zero_array = f32[3,5] broadcast(constant_zero), dimensions={}
  one_array = f32[3,5] broadcast(constant_one), dimensions={}
  two_array = f32[3,5] broadcast(constant_two), dimensions={}
  half_array = f32[3,5] broadcast(constant_half), dimensions={}
  pi_array = f32[3,5] broadcast(constant_pi), dimensions={}
  power_one_27_0 = f32[3,5] power(zero_array, one_array)
  square_sqrt_27_1 = f32[3,5] power(sqrt(half_array), two_array)
  complex_sub_add_27_2 = f32[3,5] subtract(add(half_array, pi_array), pi_array)
  sub_zero_27_3 = f32[3,5] subtract(two_array, zero_array)
  power_zero_27_4 = f32[3,5] power(half_array, zero_array)
  complex_mul_add_27_5 = f32[3,5] multiply(add(two_array, zero_array), one_array)
  sub_self_27_6 = f32[3,5] subtract(pi_array, pi_array)
  complex_pow_mul_27_7 = f32[3,5] power(multiply(one_array, one_array), one_array)
  complex_combo_27_combo_0 = f32[3,5] subtract(sub_self_27_6, power_one_27_0)
  complex_combo_27_combo_1 = f32[3,5] subtract(complex_mul_add_27_5, sub_self_27_6)
  ROOT result = (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) tuple(
    power_one_27_0,
    square_sqrt_27_1,
    complex_sub_add_27_2,
    sub_zero_27_3,
    power_zero_27_4,
    complex_mul_add_27_5,
    sub_self_27_6,
    complex_pow_mul_27_7,
    complex_combo_27_combo_0,
    complex_combo_27_combo_1
  )
}