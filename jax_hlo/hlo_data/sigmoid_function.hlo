module @jit_sigmoid attributes {mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<5xf32> {mhlo.layout_mode = "default"}) -> (tensor<5xf32> {jax.result_info = "", mhlo.layout_mode = "default"}) {
    %0 = stablehlo.negate %arg0 : tensor<5xf32>
    %1 = stablehlo.exponential %0 : tensor<5xf32>
    %cst = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %2 = stablehlo.broadcast_in_dim %cst, dims = [] : (tensor<f32>) -> tensor<5xf32>
    %3 = stablehlo.add %2, %1 : tensor<5xf32>
    %cst_0 = stablehlo.constant dense<1.000000e+00> : tensor<f32>
    %4 = stablehlo.broadcast_in_dim %cst_0, dims = [] : (tensor<f32>) -> tensor<5xf32>
    %5 = stablehlo.divide %4, %3 : tensor<5xf32>
    return %5 : tensor<5xf32>
  }
}
