HloModule test_algebraic_simplifier_21
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_pi = f32[] constant(3.14159)
  constant_half = f32[] constant(0.5)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_one = f32[] constant(1)
  constant_zero = f32[] constant(0)
  zero_array = f32[8,8] broadcast(constant_zero), dimensions={}
  one_array = f32[8,8] broadcast(constant_one), dimensions={}
  two_array = f32[8,8] broadcast(constant_two), dimensions={}
  neg_one_array = f32[8,8] broadcast(constant_neg_one), dimensions={}
  half_array = f32[8,8] broadcast(constant_half), dimensions={}
  pi_array = f32[8,8] broadcast(constant_pi), dimensions={}
  e_array = f32[8,8] broadcast(constant_e), dimensions={}
  sub_self_21_0 = f32[8,8] subtract(pi_array, pi_array)
  complex_add_mul_21_1 = f32[8,8] add(multiply(pi_array, one_array), zero_array)
  mul_zero_21_2 = f32[8,8] multiply(neg_one_array, zero_array)
  complex_mul_add_21_3 = f32[8,8] multiply(add(zero_array, zero_array), one_array)
  complex_combo_21_combo_0 = f32[8,8] add(sub_self_21_0, mul_zero_21_2)
  complex_combo_21_combo_1 = f32[8,8] subtract(sub_self_21_0, complex_mul_add_21_3)
  ROOT result = (f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8]) tuple(
    sub_self_21_0,
    complex_add_mul_21_1,
    mul_zero_21_2,
    complex_mul_add_21_3,
    complex_combo_21_combo_0,
    complex_combo_21_combo_1
  )
}