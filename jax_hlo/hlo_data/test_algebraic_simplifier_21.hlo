HloModule test_algebraic_simplifier_21, entry_computation_layout={()->(f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, /*index=5*/f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, /*index=10*/f32[8,8]{1,0})}

ENTRY %main () -> (f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8], /*index=5*/f32[8,8], f32[8,8], f32[8,8], f32[8,8], f32[8,8], /*index=10*/f32[8,8]) {
  %constant_neg_one = f32[] constant(-1)
  %neg_one_array = f32[8,8]{1,0} broadcast(%constant_neg_one), dimensions={}
  %constant_zero = f32[] constant(0)
  %zero_array = f32[8,8]{1,0} broadcast(%constant_zero), dimensions={}
  %add.anon = f32[8,8]{1,0} add(%neg_one_array, %zero_array)
  %complex_sub_add_21_0 = f32[8,8]{1,0} subtract(%add.anon, %zero_array)
  %constant_pi = f32[] constant(3.14159)
  %pi_array = f32[8,8]{1,0} broadcast(%constant_pi), dimensions={}
  %multiply.anon = f32[8,8]{1,0} multiply(%neg_one_array, %neg_one_array)
  %double_neg_21_1 = f32[8,8]{1,0} multiply(%pi_array, %multiply.anon)
  %constant_one = f32[] constant(1)
  %one_array = f32[8,8]{1,0} broadcast(%constant_one), dimensions={}
  %mul_one_21_2 = f32[8,8]{1,0} multiply(%one_array, %one_array)
  %multiply.anon.1 = f32[8,8]{1,0} multiply(%pi_array, %one_array)
  %complex_add_mul_21_3 = f32[8,8]{1,0} add(%multiply.anon.1, %zero_array)
  %sub_self_21_4 = f32[8,8]{1,0} subtract(%neg_one_array, %neg_one_array)
  %power_zero_21_5 = f32[8,8]{1,0} power(%neg_one_array, %zero_array)
  %constant_two = f32[] constant(2)
  %two_array = f32[8,8]{1,0} broadcast(%constant_two), dimensions={}
  %multiply.anon.2 = f32[8,8]{1,0} multiply(%two_array, %one_array)
  %complex_pow_mul_21_6 = f32[8,8]{1,0} power(%multiply.anon.2, %one_array)
  %power_one_21_7 = f32[8,8]{1,0} power(%neg_one_array, %one_array)
  %complex_combo_21_combo_0 = f32[8,8]{1,0} multiply(%complex_pow_mul_21_6, %mul_one_21_2)
  %complex_combo_21_combo_1 = f32[8,8]{1,0} subtract(%complex_pow_mul_21_6, %power_one_21_7)
  %complex_combo_21_combo_2 = f32[8,8]{1,0} subtract(%complex_sub_add_21_0, %complex_combo_21_combo_0)
  ROOT %result = (f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, /*index=5*/f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, f32[8,8]{1,0}, /*index=10*/f32[8,8]{1,0}) tuple(%complex_sub_add_21_0, %double_neg_21_1, %mul_one_21_2, %complex_add_mul_21_3, %sub_self_21_4, /*index=5*/%power_zero_21_5, %complex_pow_mul_21_6, %power_one_21_7, %complex_combo_21_combo_0, %complex_combo_21_combo_1, /*index=10*/%complex_combo_21_combo_2)
}



