HloModule jit_value_at_risk, entry_computation_layout={(f32[100]{0}, f32[])->f32[]}

region_0.3 {
  Arg_0.4 = pred[] parameter(0)
  Arg_1.5 = pred[] parameter(1)
  ROOT or.6 = pred[] or(Arg_0.4, Arg_1.5)
}

_where.7 {
  Arg_0.8 = pred[1]{0} parameter(0)
  reshape.11 = pred[] reshape(Arg_0.8)
  broadcast.12 = pred[100]{0} broadcast(reshape.11), dimensions={}
  Arg_1.9 = f32[] parameter(1)
  broadcast.13 = f32[100]{0} broadcast(Arg_1.9), dimensions={}
  Arg_2.10 = f32[100]{0} parameter(2)
  ROOT select.14 = f32[100]{0} select(broadcast.12, broadcast.13, Arg_2.10)
}

region_1.15 {
  Arg_0.16 = f32[] parameter(0)
  compare.22 = pred[] compare(Arg_0.16, Arg_0.16), direction=NE
  constant.18 = f32[] constant(nan)
  constant.19 = f32[] constant(0)
  compare.20 = pred[] compare(Arg_0.16, constant.19), direction=EQ
  select.21 = f32[] select(compare.20, constant.19, Arg_0.16)
  select.23 = f32[] select(compare.22, constant.18, select.21)
  Arg_1.17 = f32[] parameter(1)
  compare.26 = pred[] compare(Arg_1.17, Arg_1.17), direction=NE
  compare.24 = pred[] compare(Arg_1.17, constant.19), direction=EQ
  select.25 = f32[] select(compare.24, constant.19, Arg_1.17)
  select.27 = f32[] select(compare.26, constant.18, select.25)
  ROOT compare.28 = pred[] compare(select.23, select.27), direction=LT, type=TOTALORDER
}

quantile.29 {
  Arg_0.30 = f32[100]{0} parameter(0)
  compare.37 = pred[100]{0} compare(Arg_0.30, Arg_0.30), direction=NE
  constant.36 = pred[] constant(false)
  reduce.38 = pred[] reduce(compare.37, constant.36), dimensions={0}, to_apply=region_0.3
  reshape.39 = pred[1]{0} reshape(reduce.38)
  constant.35 = f32[] constant(nan)
  call.40 = f32[100]{0} call(reshape.39, constant.35, Arg_0.30), to_apply=_where.7
  sort.41 = f32[100]{0} sort(call.40), dimensions={0}, is_stable=true, to_apply=region_1.15
  constant.34 = f32[] constant(0)
  Arg_1.31 = f32[] parameter(1)
  constant.32 = f32[] constant(99)
  multiply.42 = f32[] multiply(Arg_1.31, constant.32)
  floor.43 = f32[] floor(multiply.42)
  clamp.47 = f32[] clamp(constant.34, floor.43, constant.32)
  convert.49 = s32[] convert(clamp.47)
  reshape.51 = s32[1]{0} reshape(convert.49)
  gather.52 = f32[] gather(sort.41, reshape.51), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=0, slice_sizes={1}
  constant.33 = f32[] constant(1)
  subtract.45 = f32[] subtract(multiply.42, floor.43)
  subtract.46 = f32[] subtract(constant.33, subtract.45)
  multiply.55 = f32[] multiply(gather.52, subtract.46)
  ceil.44 = f32[] ceil(multiply.42)
  clamp.48 = f32[] clamp(constant.34, ceil.44, constant.32)
  convert.50 = s32[] convert(clamp.48)
  reshape.53 = s32[1]{0} reshape(convert.50)
  gather.54 = f32[] gather(sort.41, reshape.53), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=0, slice_sizes={1}
  multiply.56 = f32[] multiply(gather.54, subtract.45)
  ROOT add.57 = f32[] add(multiply.55, multiply.56)
}

ENTRY main.59 {
  Arg_0.1 = f32[100]{0} parameter(0)
  Arg_1.2 = f32[] parameter(1)
  ROOT call.58 = f32[] call(Arg_0.1, Arg_1.2), to_apply=quantile.29
}

