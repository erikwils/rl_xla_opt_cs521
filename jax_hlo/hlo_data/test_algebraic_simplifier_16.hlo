HloModule test_algebraic_simplifier_16
ENTRY main {
  constant_one = f32[] constant(1)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_zero = f32[] constant(0)
  zero_array = f32[3,5] broadcast(constant_zero), dimensions={}
  one_array = f32[3,5] broadcast(constant_one), dimensions={}
  two_array = f32[3,5] broadcast(constant_two), dimensions={}
  neg_one_array = f32[3,5] broadcast(constant_neg_one), dimensions={}
  div_one_16_0 = f32[3,5] divide(one_array, one_array)
  mul_one_16_1 = f32[3,5] multiply(one_array, one_array)
  complex_add_mul_16_2 = f32[3,5] add(multiply(one_array, one_array), zero_array)
  sub_self_16_3 = f32[3,5] subtract(one_array, one_array)
  power_one_16_4 = f32[3,5] power(zero_array, one_array)
  ROOT result = (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) tuple(
    div_one_16_0,
    mul_one_16_1,
    complex_add_mul_16_2,
    sub_self_16_3,
    power_one_16_4
  )
}