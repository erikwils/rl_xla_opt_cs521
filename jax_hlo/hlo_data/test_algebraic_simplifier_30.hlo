HloModule test_algebraic_simplifier_30, entry_computation_layout={()->(f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, /*index=5*/f32[4,4]{1,0})}

ENTRY %main () -> (f32[4,4], f32[4,4], f32[4,4], f32[4,4], f32[4,4], /*index=5*/f32[4,4]) {
  %constant_one = f32[] constant(1)
  %one_array = f32[4,4]{1,0} broadcast(%constant_one), dimensions={}
  %sub_self_30_0 = f32[4,4]{1,0} subtract(%one_array, %one_array)
  %constant_two = f32[] constant(2)
  %two_array = f32[4,4]{1,0} broadcast(%constant_two), dimensions={}
  %sqrt.anon = f32[4,4]{1,0} sqrt(%two_array)
  %square_sqrt_30_1 = f32[4,4]{1,0} power(%sqrt.anon, %two_array)
  %constant_pi = f32[] constant(3.14159)
  %pi_array = f32[4,4]{1,0} broadcast(%constant_pi), dimensions={}
  %constant_zero = f32[] constant(0)
  %zero_array = f32[4,4]{1,0} broadcast(%constant_zero), dimensions={}
  %add_zero_30_2 = f32[4,4]{1,0} add(%pi_array, %zero_array)
  %mul_zero_30_3 = f32[4,4]{1,0} multiply(%pi_array, %zero_array)
  %div_one_30_4 = f32[4,4]{1,0} divide(%one_array, %one_array)
  %mul_two_30_5 = f32[4,4]{1,0} multiply(%two_array, %two_array)
  ROOT %result = (f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, f32[4,4]{1,0}, /*index=5*/f32[4,4]{1,0}) tuple(%sub_self_30_0, %square_sqrt_30_1, %add_zero_30_2, %mul_zero_30_3, %div_one_30_4, /*index=5*/%mul_two_30_5)
}



