HloModule test_algebraic_simplifier_27, entry_computation_layout={()->(f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, /*index=5*/f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0})}

ENTRY %main () -> (f32[16], f32[16], f32[16], f32[16], f32[16], /*index=5*/f32[16], f32[16], f32[16], f32[16]) {
  %constant_zero = f32[] constant(0)
  %zero_array = f32[16]{0} broadcast(%constant_zero), dimensions={}
  %sqrt.anon = f32[16]{0} sqrt(%zero_array)
  %constant_two = f32[] constant(2)
  %two_array = f32[16]{0} broadcast(%constant_two), dimensions={}
  %mul_two_27_2 = f32[16]{0} multiply(%two_array, %two_array)
  %broadcast.2 = f32[16]{0} broadcast(%constant_zero), dimensions={}
  %broadcast.19 = f32[16]{0} broadcast(%constant_zero), dimensions={}
  %mul_two_27_2.1 = f32[] multiply(%constant_two, %constant_two)
  %broadcast.22 = f32[16]{0} broadcast(%mul_two_27_2.1), dimensions={}
  %constant_e = f32[] constant(2.71828)
  %broadcast.25 = f32[16]{0} broadcast(%constant_e), dimensions={}
  %constant.1 = f32[] constant(1)
  %broadcast.10 = f32[16]{0} broadcast(%constant.1), dimensions={}
  %broadcast.13 = f32[16]{0} broadcast(%constant_zero), dimensions={}
  %constant_one = f32[] constant(1)
  %broadcast.16 = f32[16]{0} broadcast(%constant_one), dimensions={}
  %broadcast.32 = f32[16]{0} broadcast(%constant_one), dimensions={}
  %complex_combo_27_combo_0.1 = f32[] subtract(%constant_one, %constant_e)
  %broadcast.35 = f32[16]{0} broadcast(%complex_combo_27_combo_0.1), dimensions={}
  ROOT %result = (f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}, /*index=5*/f32[16]{0}, f32[16]{0}, f32[16]{0}, f32[16]{0}) tuple(%broadcast.2, %broadcast.19, %broadcast.22, %broadcast.25, %broadcast.10, /*index=5*/%broadcast.13, %broadcast.16, %broadcast.32, %broadcast.35)
  %sqrt.anon.1 = f32[] sqrt(%constant_zero)
  %broadcast.4 = f32[16]{0} broadcast(%sqrt.anon.1), dimensions={}
  %multiply = f32[16]{0} multiply(%broadcast.4, %broadcast.4)
  %constant = f32[] constant(1)
  %broadcast.29 = f32[16]{0} broadcast(%constant), dimensions={}
  %negate = f32[] negate(%constant_e)
  %broadcast.3 = f32[16]{0} broadcast(%negate), dimensions={}
  %add = f32[16]{0} add(%broadcast.32, %broadcast.3)
}



