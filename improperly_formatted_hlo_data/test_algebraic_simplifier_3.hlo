HloModule test_algebraic_simplifier_3
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_zero = f32[] constant(0)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_half = f32[] constant(0.5)
  constant_one = f32[] constant(1)
  constant_pi = f32[] constant(3.14159)
  zero_array = f32[2,3,4] broadcast(constant_zero), dimensions={}
  one_array = f32[2,3,4] broadcast(constant_one), dimensions={}
  two_array = f32[2,3,4] broadcast(constant_two), dimensions={}
  neg_one_array = f32[2,3,4] broadcast(constant_neg_one), dimensions={}
  half_array = f32[2,3,4] broadcast(constant_half), dimensions={}
  pi_array = f32[2,3,4] broadcast(constant_pi), dimensions={}
  e_array = f32[2,3,4] broadcast(constant_e), dimensions={}
  sub_zero_3_0 = f32[2,3,4] subtract(zero_array, zero_array)
  power_zero_3_1 = f32[2,3,4] power(one_array, zero_array)
  double_neg_3_2 = f32[2,3,4] multiply(neg_one_array, multiply(neg_one_array, neg_one_array))
  mul_two_3_3 = f32[2,3,4] multiply(zero_array, two_array)
  square_sqrt_3_4 = f32[2,3,4] power(sqrt(pi_array), two_array)
  complex_combo_3_combo_0 = f32[2,3,4] add(mul_two_3_3, square_sqrt_3_4)
  complex_combo_3_combo_1 = f32[2,3,4] multiply(double_neg_3_2, sub_zero_3_0)
  ROOT result = (f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4]) tuple(
    sub_zero_3_0,
    power_zero_3_1,
    double_neg_3_2,
    mul_two_3_3,
    square_sqrt_3_4,
    complex_combo_3_combo_0,
    complex_combo_3_combo_1
  )
}