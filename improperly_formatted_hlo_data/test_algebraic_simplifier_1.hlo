HloModule test_algebraic_simplifier_1
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_zero = f32[] constant(0)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_half = f32[] constant(0.5)
  constant_one = f32[] constant(1)
  constant_pi = f32[] constant(3.14159)
  zero_array = f32[3,5] broadcast(constant_zero), dimensions={}
  one_array = f32[3,5] broadcast(constant_one), dimensions={}
  two_array = f32[3,5] broadcast(constant_two), dimensions={}
  neg_one_array = f32[3,5] broadcast(constant_neg_one), dimensions={}
  half_array = f32[3,5] broadcast(constant_half), dimensions={}
  pi_array = f32[3,5] broadcast(constant_pi), dimensions={}
  e_array = f32[3,5] broadcast(constant_e), dimensions={}
  complex_pow_mul_1_0 = f32[3,5] power(multiply(one_array, one_array), one_array)
  add_neg_1_1 = f32[3,5] add(pi_array, neg_one_array)
  complex_sub_add_1_2 = f32[3,5] subtract(add(one_array, half_array), half_array)
  mul_one_1_3 = f32[3,5] multiply(half_array, one_array)
  complex_mul_add_1_4 = f32[3,5] multiply(add(two_array, zero_array), one_array)
  div_one_1_5 = f32[3,5] divide(neg_one_array, one_array)
  mul_zero_1_6 = f32[3,5] multiply(neg_one_array, zero_array)
  complex_combo_1_combo_0 = f32[3,5] add(add_neg_1_1, div_one_1_5)
  ROOT result = (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) tuple(
    complex_pow_mul_1_0,
    add_neg_1_1,
    complex_sub_add_1_2,
    mul_one_1_3,
    complex_mul_add_1_4,
    div_one_1_5,
    mul_zero_1_6,
    complex_combo_1_combo_0
  )
}