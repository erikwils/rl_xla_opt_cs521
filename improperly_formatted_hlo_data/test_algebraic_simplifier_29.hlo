HloModule test_algebraic_simplifier_29
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_zero = f32[] constant(0)
  constant_two = f32[] constant(2)
  constant_neg_one = f32[] constant(-1)
  constant_one = f32[] constant(1)
  constant_pi = f32[] constant(3.14159)
  zero_array = f32[16] broadcast(constant_zero), dimensions={}
  one_array = f32[16] broadcast(constant_one), dimensions={}
  two_array = f32[16] broadcast(constant_two), dimensions={}
  neg_one_array = f32[16] broadcast(constant_neg_one), dimensions={}
  pi_array = f32[16] broadcast(constant_pi), dimensions={}
  e_array = f32[16] broadcast(constant_e), dimensions={}
  div_one_29_0 = f32[16] divide(two_array, one_array)
  square_sqrt_29_1 = f32[16] power(sqrt(e_array), two_array)
  sub_zero_29_2 = f32[16] subtract(pi_array, zero_array)
  complex_sub_add_29_3 = f32[16] subtract(add(neg_one_array, e_array), e_array)
  add_neg_29_4 = f32[16] add(zero_array, neg_one_array)
  complex_pow_mul_29_5 = f32[16] power(multiply(zero_array, one_array), one_array)
  power_one_29_6 = f32[16] power(neg_one_array, one_array)
  ROOT result = (f32[16], f32[16], f32[16], f32[16], f32[16], f32[16], f32[16]) tuple(
    div_one_29_0,
    square_sqrt_29_1,
    sub_zero_29_2,
    complex_sub_add_29_3,
    add_neg_29_4,
    complex_pow_mul_29_5,
    power_one_29_6
  )
}