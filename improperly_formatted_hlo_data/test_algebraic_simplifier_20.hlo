HloModule test_algebraic_simplifier_20
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_zero = f32[] constant(0)
  constant_two = f32[] constant(2)
  constant_half = f32[] constant(0.5)
  constant_one = f32[] constant(1)
  zero_array = f32[3,5] broadcast(constant_zero), dimensions={}
  one_array = f32[3,5] broadcast(constant_one), dimensions={}
  two_array = f32[3,5] broadcast(constant_two), dimensions={}
  half_array = f32[3,5] broadcast(constant_half), dimensions={}
  e_array = f32[3,5] broadcast(constant_e), dimensions={}
  mul_zero_20_0 = f32[3,5] multiply(half_array, zero_array)
  power_zero_20_1 = f32[3,5] power(e_array, zero_array)
  complex_add_mul_20_2 = f32[3,5] add(multiply(zero_array, one_array), zero_array)
  div_one_20_3 = f32[3,5] divide(zero_array, one_array)
  complex_mul_add_20_4 = f32[3,5] multiply(add(half_array, zero_array), one_array)
  complex_sub_add_20_5 = f32[3,5] subtract(add(one_array, one_array), one_array)
  mul_one_20_6 = f32[3,5] multiply(half_array, one_array)
  sub_self_20_7 = f32[3,5] subtract(half_array, half_array)
  ROOT result = (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) tuple(
    mul_zero_20_0,
    power_zero_20_1,
    complex_add_mul_20_2,
    div_one_20_3,
    complex_mul_add_20_4,
    complex_sub_add_20_5,
    mul_one_20_6,
    sub_self_20_7
  )
}