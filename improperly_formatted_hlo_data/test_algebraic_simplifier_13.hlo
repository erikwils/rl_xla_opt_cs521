HloModule test_algebraic_simplifier_13
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_zero = f32[] constant(0)
  constant_two = f32[] constant(2)
  constant_half = f32[] constant(0.5)
  constant_one = f32[] constant(1)
  constant_pi = f32[] constant(3.14159)
  zero_array = f32[2,3,4] broadcast(constant_zero), dimensions={}
  one_array = f32[2,3,4] broadcast(constant_one), dimensions={}
  two_array = f32[2,3,4] broadcast(constant_two), dimensions={}
  half_array = f32[2,3,4] broadcast(constant_half), dimensions={}
  pi_array = f32[2,3,4] broadcast(constant_pi), dimensions={}
  e_array = f32[2,3,4] broadcast(constant_e), dimensions={}
  add_zero_13_0 = f32[2,3,4] add(e_array, zero_array)
  complex_pow_mul_13_1 = f32[2,3,4] power(multiply(one_array, one_array), one_array)
  power_zero_13_2 = f32[2,3,4] power(half_array, zero_array)
  square_sqrt_13_3 = f32[2,3,4] power(sqrt(e_array), two_array)
  div_one_13_4 = f32[2,3,4] divide(two_array, one_array)
  sub_self_13_5 = f32[2,3,4] subtract(e_array, e_array)
  complex_add_mul_13_6 = f32[2,3,4] add(multiply(two_array, one_array), zero_array)
  ROOT result = (f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4], f32[2,3,4]) tuple(
    add_zero_13_0,
    complex_pow_mul_13_1,
    power_zero_13_2,
    square_sqrt_13_3,
    div_one_13_4,
    sub_self_13_5,
    complex_add_mul_13_6
  )
}