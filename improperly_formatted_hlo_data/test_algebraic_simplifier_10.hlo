HloModule test_algebraic_simplifier_10
ENTRY main {
  constant_e = f32[] constant(2.71828)
  constant_zero = f32[] constant(0)
  constant_two = f32[] constant(2)
  constant_half = f32[] constant(0.5)
  constant_neg_one = f32[] constant(-1)
  constant_one = f32[] constant(1)
  constant_pi = f32[] constant(3.14159)
  zero_array = f32[3,5] broadcast(constant_zero), dimensions={}
  one_array = f32[3,5] broadcast(constant_one), dimensions={}
  two_array = f32[3,5] broadcast(constant_two), dimensions={}
  neg_one_array = f32[3,5] broadcast(constant_neg_one), dimensions={}
  half_array = f32[3,5] broadcast(constant_half), dimensions={}
  pi_array = f32[3,5] broadcast(constant_pi), dimensions={}
  e_array = f32[3,5] broadcast(constant_e), dimensions={}
  complex_add_mul_10_0 = f32[3,5] add(multiply(two_array, one_array), zero_array)
  square_sqrt_10_1 = f32[3,5] power(sqrt(zero_array), two_array)
  mul_two_10_2 = f32[3,5] multiply(zero_array, two_array)
  power_one_10_3 = f32[3,5] power(zero_array, one_array)
  complex_pow_mul_10_4 = f32[3,5] power(multiply(two_array, one_array), one_array)
  double_neg_10_5 = f32[3,5] multiply(one_array, multiply(neg_one_array, neg_one_array))
  complex_combo_10_combo_0 = f32[3,5] multiply(complex_add_mul_10_0, complex_pow_mul_10_4)
  complex_combo_10_combo_1 = f32[3,5] multiply(complex_pow_mul_10_4, mul_two_10_2)
  complex_combo_10_combo_2 = f32[3,5] add(square_sqrt_10_1, complex_combo_10_combo_0)
  ROOT result = (f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5], f32[3,5]) tuple(
    complex_add_mul_10_0,
    square_sqrt_10_1,
    mul_two_10_2,
    power_one_10_3,
    complex_pow_mul_10_4,
    double_neg_10_5,
    complex_combo_10_combo_0,
    complex_combo_10_combo_1,
    complex_combo_10_combo_2
  )
}